[tool.poetry]
name = "mythcommflagwrapper"
version = "0.1.0"
description = "Wrapper around Comskip for MythTV"
authors = ["Charlie Rusbridger <charlie@rusbridger.com>"]
readme = "README.md"
repository = "https://github.com/charrus/mythcommflag"
packages = [{include = "mythcommflagwrapper", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
# MythTV = { git = "git@github.com:MythTV/mythtv.git", subdirectory = "bindings/python", tag="v34.0"}


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
mythcommflagwrapper = 'mythcommflagwrapper.__main__:main'

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".eggs",
    ".git",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
target-version = "py312"
line-length = 79

[tool.ruff.lint]
extend-select = [
  'D',
  'E',
  'W',
  'F',
  'I001',
  'E501',
  'RUF',
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_expr = true
